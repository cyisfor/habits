ldflags = `pkg-config sqlite3 gtk+-3.0 libnotify --libs`  -lm -g
cflags = `pkg-config sqlite3 gtk+-3.0 libnotify --cflags` -g -Igen/ -fdiagnostics-color=always
pack = ./data_to_header_string

rule run
  command = ./$in > $out

rule program
  command = gcc $cflags -o $out $in $ldflags

rule object
  command = gcc $cflags -c -o $out $in

rule resource
  command = name=$name $pack/pack $in >$out

build obj/checkup/new_habit.o: object src/checkup/new_habit.c | gen/new_habit.glade.h
build obj/checkup/main.o: object src/checkup/main.c | gen/checkup.glade.h
  cflags = $cflags -Isrc
build obj/checkup/poke.o: object src/checkup/poke.c
  cflags = $cflags -Isrc
build obj/checkup/disabled.o: object src/checkup/disabled.c
build obj/checkup/prettify.o: object src/checkup/prettify.c
  cflags = $cflags -Isrc
build obj/checkup/update.o: object src/checkup/update.c
build obj/checkup/search.o: object src/checkup/search.c

build obj/db.o: object src/db.c | gen/base.sql.h gen/pending.sql.h gen/searching.sql.h

build obj/readable_interval.o: object src/readable_interval.c

build gen/base.sql.h: resource sql/base.sql | $pack/pack
  name = base_sql
build gen/pending.sql.h: resource sql/pending.sql | $pack/pack
  name = pending_sql
build gen/searching.sql.h: resource sql/searching.sql | $pack/pack
  name = searching_sql
build gen/checkup.glade.h: resource checkup.glade.xml | $pack/pack
  name = checkup_glade
build gen/new_habit.glade.h: resource new_habit.glade.xml | $pack/pack
  name = new_habit_glade

build $pack/pack: program $pack/main.c | $pack/specialescapes.c
build $pack/specialescapes.c: run $pack/make_specialescapes
build $pack/make_specialescapes: program $pack/make_specialescapes.c

build checkup: program obj/checkup/main.o obj/checkup/poke.o obj/checkup/prettify.o obj/checkup/update.o obj/checkup/search.o obj/db.o obj/new_habit.o obj/readable_interval.o

default checkup

build apply_template: program obj/apply_template.o
build obj/apply_template.o: object src/apply_template.c

rule template
  command = $env ./apply_template <$in >$out

build sql/pending.sql: template sql/querying.template.sql | apply_template
  env = env ENABLED="" CRITERIA="enabled AND ( ( NOT has_performed ) OR  (frequency / 1.5 < elapsed) )"

build sql/searching.sql: template sql/querying.template.sql | apply_template
  env = env ENABLED=", enabled" CRITERIA="description LIKE ?1"
